' 'rioOnto_or(eor:string, ech:string, erf:string)', 
, 'dapreco_JudicialRemedy(j:string)', 'fun_prOnto_SupervisoryAuthority(fb:string, fa:string)', 'fun_prOnto_MemberState(y:string, fb:string)',   

'dapreco_Enter(ent:string, w:string, c:string)', 'prOnto_Contract(c:string)', 'Thesis_StatutoryRequirement(esr:string, z:string)', 'Thesis_ContractualRequirement(ecr:string, z:string)', 'Thesis_RequirementToEnterContract(erte:string, z:string)', 'dapreco_Describe(ed:string, d:string, em:string)', 'dapreco_AutomatedDecisionMaking(em:string)', 'prOnto_Document(d:string)', 'dapreco_Implement(ei:string, y:string, em:string)', 'dapreco_AwareOf(ewa1:string, z:string, ei:string)', 'prOnto_isBasedOn(ep:string, epu:string)', 'prOnto_Purpose(epu:string)', 'dapreco_Access(eac:string, w:string, z:string)', 'dapreco_Rectify(ere:string, w:string, z:string)', 'prOnto_Delete(era:string, w:string, z:string)', 'dapreco_Limit(eli:string, w:string, ep:string)', 'prOnto_Transmit(elt:string, x:string, z:string, k:string)', 'dapreco_GiveConsent(ehc:string, w:string, c:string)', 'dapreco_AuthorizedBy(eau:string, epu:string, c:string)', 'dapreco_WithdrawConsent(ew:string, w:string, epu:string)', 'rioOnto_cause(ei:string, eaw:string)', 'prOnto_Measure(em:string)', 'rioOnto_timeOf(eti:string, es:string)', 'dapreco_CategoryOf(p:string, r:string)', 'prOnto_Recipient(r:string, z:string)', 'prOnto_Risk(ers:string, w:string)', 'prOnto_InternationalOrganization(eio:string, k:string)', 'dapreco_ThirdCountry(etc:string, k:string)', 'prOnto_DPO(k:string)', 'fun_dapreco_contactDetails(k:string, fa:string)+', 'fun_dapreco_legalBasisOf(ep:string, fa:string)+', 'prOnto_ThirdParty(k:string)', 'dapreco_Hold(eh1:string, y:string, fa:string)', 'fun_dapreco_legitimateInterest(y:string, fa:string)+', 'dapreco_ResponsibleFor(er:string, k:string, ec:string)', 'prOnto_Representative(k:string)', 'prOnto_isRepresentedBy(y:string, k:string)', 'dapreco_LinkBetween(eli:string, epu1:string, epu2:string)', 'dapreco_TakenToAddress(eta:string, em:string, ecs:string)', 'dapreco_TakeIntoAccount(et1:string, y:string, eli:string)+', 'fun_dapreco_contextOf(ep:string, fa:string)+', 'fun_dapreco_natureOf(z:string, fb:string)+', 'prOnto_lawfulness(ep:string)', 'rioOnto_imply(ei:string, et:string, ep:string)', 'dapreco_publicPowers(pp:string)', 

'dapreco_Protect(epr1:string, k1:string, fa:string)', 'fun_dapreco_vitalInterest(w:string, fa:string)', 'rioOnto_exceptionCha2Art8Par1(ep:string)', 'Thesis_StillWithinPurpose(ep:string, epu:string)', 'Thesis_Archiving(epu:string)', 'Thesis_PublicInterest(epu:string)', 'Thesis_ScientificInterest(epu:string)', 'Thesis_HistoricalResearch(epu:string)', 'Theis_StatisticalPurpose(epu:string)', 'dapreco_security(ese:string, ep:string)+', 'dapreco_CompatibleWith(ep:string, epu:string)+', 'prOnto_isBasedOn_3(ebo1:string, ep:string, epu:string)', 'prOnto_Research(ers:string)', 'prOnto_Statistic(est:string)', 'dapreco_specified(es:string, epu:string)+', 'Thesis_legitimate(eli:string, epu:string)', 'Thesis_explicit(ee:string, epu:string)', 'dapreco_AdequateWith(eaw:string, z:string, epu:string)+', 'dapreco_RelevantTo(ert:string, z:string, epu:string)+', 'dapreco_LimitedTo(elt:string, z:string, epu:string)+', 'dapreco_accurate(eaw:string, z:string)', 'dapreco_upToDate(eud:string, z:string)+', 'prOnto_fairness(ef:string, ep:string)+', 'prOnto_transparency(et:string, ep:string)+', 'dapreco_public(z:string)+', 'rioOnto_exceptionCha3Sec3Art17Par3(z:string)', 'fun_dapreco_copyOf(z:string, fa:string)+', 'dapreco_LegalClaim(l:string)', 'rioOnto_exceptionCha2Art11Par2(ep:string)', 'InfSecOnto_dummy(BadFormula:string)', 'dapreco_LegalRequirement(lr:string)', 'prOnto_Health(ph:string)', 'dapreco_ViolationOf(ev:string, fa:string)', 'fun_dapreco_freedomOfExprAndInfo(w:string, fa:string)', 'rioOnto_Obliged_4(era:string, erb:string, t2:string, y:string)', 'prOnto_Marketing(epu:string)', 'rioOnto_exceptionCha3Sec4Art21Par1NW(ep:string)', 'prOnto_publicInterest(pi:string)', 'dapreco_ComplyWith(eco:string, epu:string, GDPR:string)', 'rioOnto_partOf(epu:string, co:string)', 'prOnto_Consent(c:string)', 'prOnto_Controller(y:string, z:string)', 'Thesis_AbleToWithdrawConsent(ea:string, w:string, epu:string)+', 'dapreco_EasyAs(ee:string, ew:string, ehc:string)', 'dapreco_RequestLimitation(er:string, y:string, eli:string)'])