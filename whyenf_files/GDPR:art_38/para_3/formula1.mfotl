ALWAYS( ( EXISTS a1 .  EXISTS ep .  EXISTS ed .  EXISTS edp .  EXISTS w .  EXISTS z . ((prOnto_PersonalDataProcessing(ep, x, z)) AND (prOnto_designates(ed, y, k)) AND (prOnto_nominates(edp, y, x))) AND (rioOnto_Obliged(e, t1, k)) AND (prOnto_DPO(k)) AND (prOnto_PersonalData(z, w))) IMPLIES ( EXISTS t2 .  EXISTS a2 .  EXISTS eny .  EXISTS enx .  EXISTS enc1 .  EXISTS enc2 .  EXISTS eor .  EXISTS ead .  EXISTS eaf .  EXISTS ec1 .  EXISTS edm .  EXISTS ec2 .  EXISTS epe .  EXISTS en1 .  EXISTS en2 .  EVENTUALLY (( NOT ((dapreco_AdviseOn(ead, x, k, e)) OR (rioOnto_cause(ec1, e, edm)) OR (rioOnto_cause(ec2, e, epe)))) AND ((prOnto_Communicate(en1, k, fa, fb)) OR (prOnto_Communicate(en2, k, fa, fb)) OR (fun_dapreco_highestManagementLevel(y, fa)) OR (fun_dapreco_allInfoAbout(e, fb)) OR (fun_dapreco_highestManagementLevel(x, fa))) AND (rioOnto_Obliged(e, t1, k)) AND (dapreco_Dismiss(edm, y, k)) AND (dapreco_Penalise(epe, y, k)) AND (prOnto_DPO(k)) AND (rioOnto_and(a2, eny, enx, enc1, enc2, eor)) AND (rioOnto_not(eny, ead)) AND (rioOnto_not(enx, eaf)) AND (rioOnto_not(enc1, ec1)) AND (rioOnto_not(enc2, ec2)) AND (rioOnto_or(eor, en1, en2)) AND (prOnto_Communicate(en1, k, fun(dapreco_highestManagementLevel(y)), fun(dapreco_allInfoAbout(e)))) AND (prOnto_Communicate(en2, k, fun(dapreco_highestManagementLevel(x)), fun(dapreco_allInfoAbout(e)))))))